on: push

name: pypi publish

jobs:
  publish:
    runs-on: ubuntu-latest
    container: baguasys/bagua:latest
    steps:
      - uses: actions/checkout@v2
        with:
          fetch-depth: 0
          submodules: recursive
      - run: BAGUA_NO_INSTALL_DEPS=1 python -m build -s
      - name: Publish a Python distribution to PyPI
        if: github.ref == 'refs/heads/master' && !startsWith(github.ref, 'refs/tags')
        uses: pypa/gh-action-pypi-publish@release/v1
        with:
          user: __token__
          password: ${{ secrets.PYPI_API_TOKEN }}
      - name: Publish package
        if: github.event_name == 'push' && startsWith(github.ref, 'refs/tags')
        uses: pypa/gh-action-pypi-publish@release/v1
        with:
          user: __token__
          password: ${{ secrets.PYPI_API_TOKEN }}
      - name: Archive package artifacts
        uses: actions/upload-artifact@v2
        with:
          name: bagua-pypi-package
          path: |
            dist/*

  check_install:
    runs-on: ubuntu-latest
    container: baguasys/bagua:latest
    needs: publish
    steps:
    - run: rustup default stable
    - name: Check install with pip
      run: |
        python -m pip install --pre bagua --upgrade

  wheel:
    runs-on: ${{ matrix.os }}

    env:
      CIBW_BUILD: "${{ matrix.cibw.build || '*' }}"
      CIBW_MANYLINUX_X86_64_IMAGE: "${{ matrix.cibw.manylinux_image }}"
      CIBW_ARCHS_LINUX: "${{ matrix.cibw.arch || 'auto' }}"

    strategy:
      fail-fast: false
      matrix:
        include:
          - os: ubuntu-20.04
            name: manylinux2010
            cibw:
              build: "cp37* cp38* cp39* cp310*"
              # manylinux_image: manylinux2010
              manylinux_image: baguasys/manylinux-cuda:102
              arch: x86_64

    steps:
      - uses: actions/checkout@v2
        with:
          fetch-depth: 0
          submodules: recursive

      - name: setup python
        uses: actions/setup-python@v2
        with:
          python-version: "3.8"
          architecture: ${{ matrix.architecture }}

      - name: install dependencies
        run: |
          pip install --upgrade setuptools pip wheel
          pip install cibuildwheel==2.1.2
      - name: show environment
        run: |
          pip freeze
      - name: list target wheels
        run: |
          python -m cibuildwheel . --print-build-identifiers
      - name: build wheels
        run: |
          python -m cibuildwheel .
      - uses: actions/upload-artifact@v2
        with:
          name: wheels-${{ matrix.name }}
          path: "wheelhouse/*"
          if-no-files-found: error

      - name: Publish a Python distribution to PyPI
        if: github.ref == 'refs/heads/master' && !startsWith(github.ref, 'refs/tags')
        uses: pypa/gh-action-pypi-publish@release/v1
        with:
          user: __token__
          password: ${{ secrets.PYPI_API_TOKEN }}
          packages_dir: wheelhouse/

      - name: Publish package
        if: github.event_name == 'push' && startsWith(github.ref, 'refs/tags')
        uses: pypa/gh-action-pypi-publish@release/v1
        with:
          user: __token__
          password: ${{ secrets.PYPI_API_TOKEN }}
          packages_dir: wheelhouse/
